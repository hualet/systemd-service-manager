/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -c SystemdManager -p systemdmanager org.freedesktop.systemd1.Manager.xml
 *
 * qdbusxml2cpp is Copyright (C) 2016 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef SYSTEMDMANAGER_H
#define SYSTEMDMANAGER_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

#include "types.h"

/*
 * Proxy class for interface org.freedesktop.systemd1.Manager
 */
class SystemdManager: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.systemd1.Manager"; }

public:
    SystemdManager(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~SystemdManager();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<UnitFileList> ListUnitFiles()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("ListUnitFiles"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace org {
  namespace freedesktop {
    namespace systemd1 {
      typedef ::SystemdManager Manager;
    }
  }
}
#endif
